<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_platformparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A platform that floats in water.

//Set the gravity.
gravity = 0.1;

//Find the nearest water instance
water = -1;

//Make the platform able to float in water.
ready = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floating platform logic (Player)

//If Mario overlaps the platform.
if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_mario,0,0))
&amp;&amp; (obj_mario.state &lt; 2) 
&amp;&amp; (obj_mario.y &lt; bbox_top-11) { 
    
    //Make it fall.
    if (!ready) {
    
        //Make it fall.
        ready = true;
        
        //Set up the gravity.
        vspeed = 1.25;
    }
    
    //Snap Mario above the platform.
    if (!collision_line(obj_mario.bbox_left,bbox_top-5,obj_mario.bbox_right,bbox_top+1,obj_solidtop,1,1)) 
    &amp;&amp; (!collision_line(obj_mario.bbox_left,bbox_top-5,obj_mario.bbox_right,bbox_top+1,obj_platformparent,1,1)) {

        obj_mario.y = ceil(bbox_top-16);
    }
}

//Otherwise, allow Mario to sink the platform a bit.
else {

    ready = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floating platform logic

//Find nearest water object and float on it.
water = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0);
if (water) {

    //If the platform is 8 pixels below the top boundary of the water.
    if (y &gt; water.y-8) {
    
        //Set the vertical speed
        vspeed -= 0.1;
        
        //Stop gravity.
        gravity = 0;
    }
    
    //Otherwise, apply gravity.
    else {
    
        gravity = 0.1;
    }  
}

//Cap vertical speed.
if (vspeed &lt; -1)
    vspeed = -1;
else if (vspeed &gt; 2.5)
    vspeed = 2.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
