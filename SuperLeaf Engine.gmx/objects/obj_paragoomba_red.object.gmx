<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_paragoomba_red</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Paragoomba

//Animate
image_speed = 0.15;

//Set up flying state
jumping = 0;

//Call the inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving.

//If Mario does exist.
//If the enemy is not moving.
if (hspeed == 0) {

    //If Mario does exist.
    if (instance_exists(obj_mario)) {
    
        if (obj_mario.x &gt; x)
            hspeed = 0.5;
        else
            hspeed = -0.5;
    }
    else
        hspeed = -0.5;
}
else {

    if (instance_exists(obj_mario)) {
    
        if (obj_mario.x &gt; x)
            hspeed = 0.5;
        else
            hspeed = -0.5;
    }
    else {
    
        hspeed = -0.5;
    }
}

//Start jumping
alarm[0] = 10;

//Set death sprite
deadspr = spr_goomba_red;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start jumping

//If the goomba is on the ground.
if (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_solidtop,0,0))
|| (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+2,obj_slopeparent,1,0)) {

    //Start jumping
    jumping = 1;
    
    //Set the vertical speed.
    if (!swimming)
        vspeed = -2.5;
    else
        vspeed = -1.25;
}

//Otherwise, keep checking.
else {

    alarm[0] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up the animation.

if (jumping == 0) {

    sprite_index = spr_paragoomba_red;
    image_speed = 0.15;
}
else {

    sprite_index = spr_paragoomba_red_b;
    image_speed = 0.3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slope Collision

//If the object vertical speed is equal/greater than 0.
if (vspeed &gt;= 0) { 
    
    //Stop vertical speed.
    gravity = 0;
    if (jumping == 0) {
    
        vspeed = 0;
    }
    else {
    
        if ((jumping &gt; 0) &amp;&amp; (jumping &lt; 4)) {
        
            jumping++;
            if (!swimming)
                vspeed = -2.5;
            else
                vspeed = -1.25;
            
        }
        else if (jumping == 4) {
        
            //Set the jumping state
            jumping = 5;
            
            //Set the vertical speed
            if (!swimming)
                vspeed = -4;
            else
                vspeed = -2.5;            
        }
        else if (jumping == 5) {
        
            jumping = 0;
            alarm[10] = 10;
        }
    }    
}

//Stay embed on the slope.
while (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom-1,obj_slopeparent,1,1))
    y--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision

//If there's a platform nearby and Mario's vertical speed is greater than 0.
if ((bbox_bottom &lt; other.yprevious+5) &amp;&amp; (vspeed &gt; 0)) {

    //Snap to position.
    y = other.yprevious-16;
    
    //Stop vertical speed.
    gravity = 0;
    if (jumping == 0) {
    
        vspeed = 0;
    }
    else {
    
        if ((jumping &gt; 0) &amp;&amp; (jumping &lt; 4)) {
        
            jumping++;
            if (!swimming)
                vspeed = -2.5;
            else
                vspeed = -1.25;
            
        }
        else if (jumping == 4) {
        
            //Set the jumping state
            jumping = 5;
            
            //Set the vertical speed
            if (!swimming)
                vspeed = -4;
            else
                vspeed = -2.5;            
        }
        else if (jumping == 5) {
        
            jumping = 0;
            alarm[10] = 10;
        }
    }     
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a red goomba

//Create a redgoomba.
mygoom = instance_create(x,y,obj_goomba_red);
with (mygoom) {

    if (other.hspeed &gt; 0)
        hspeed = 0.5;
    else if (other.hspeed &lt; 0)
        hspeed = -0.5;
}

//Destroy goomba
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default floor / ceiling collisions.

//Floor collision
if ((collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+1,obj_solidtop,0,0)) &amp;&amp; (!vspeed &lt; 0)) { //If the object is on contact with the floor.

    //Stop vertical speed.
    gravity = 0;
    if (jumping == 0) {
    
        vspeed = 0
    }
}

//Otherwise, if the object is not in contact with the floor.
else {

    //Set up the gravity.
    if (!swimming) {

        //Cap vertical speed.
        if (vspeed &gt; 4)
        vspeed = 4;
        
        //Set up gravity.
        if (jumping &lt; 5)
            gravity = 0.3;
        else
            gravity = 0.175;
    }
    else {

        //Cap vertical speed.
        if (vspeed &gt; 1)
        vspeed = 1;
        
        //Set up gravity.
        if (jumping &lt; 5)
            gravity = 0.0625;
        else
            gravity = 0.0575;
    }
}

//Slope collision
if (vspeed &gt;= 0) {

    //45ยบ Right Slope
    if (place_meeting(bbox_right,y+4,obj_slope_sr)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4
        }
    }
    
    //45ยบ Left Slope
    else if (place_meeting(bbox_left,y+4,obj_slope_sl)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4;
        }
    }
    
    //22.5ยบ Right Slope
    else if (place_meeting(bbox_right,y+2,obj_slope_r)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
    
    //22.5ยบ Left Slope
    else if (place_meeting(bbox_left,y+2,obj_slope_l)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
}

//Ceiling collision
if (vspeed &lt; 0) {

    //If the object is moving upwards and there's a ceiling on the way...
    if (collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top-1,obj_solid,1,0)) { 
        
        //Stop vertical movement.
        vspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
