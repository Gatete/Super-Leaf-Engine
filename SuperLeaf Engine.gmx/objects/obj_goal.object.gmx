<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goalcard</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The goal card, clear the level with this.

//Do not animate
image_speed = 0;

//Replace frame
alarm[0] = 10;

//Play stream
stream = -1;

//Allow pick
ready = 0;

//Check if time equals 0 and return to map
ready2 = 0;

//Display "Course Clear"
ready3 = 0;

//Set the card for the specific variable
cardtype = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display "Course Clear"

ready3++;
if (ready3 == 1)
    alarm[4] = 60;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to map

//Create fade effect
if (instance_number(obj_fade_in) == 0) {

    //Create a fade in effect.
    ID = instance_create(0,0,obj_fade_in);
    with (ID) {
    
        target = rm_map;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get extra lives out of the cards

ID = instance_create(view_xview[0]+128,view_yview[0]+224,obj_score_minigame);
with (ID) {

    depth = -4;
    image_index = other.cardtype;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get points off time

//If the time is greater than 4.
if (global.time &gt; 4) {

    //Subtract 5 seconds from time.
    global.time -= 5;
    
    //Get 250 points.
    score += 250;
    
    //Repeat the process.
    alarm[1] = 1;    
}

//Otherwise, if time is lower than 5 and time is greater than 0.
else if ((global.time &gt; 0) &amp;&amp; (global.time &lt; 5)) {

    //Subtract 1 second from time.
    global.time--;
    
    //Get 50 points
    score += 50;
    
    //Repeat the process.
    alarm[1] = 1;
}

//Play a sound
if (global.time &gt; 0) {

    audio_stop_sound(snd_count);
    audio_play_sound(snd_count,0,0);
}
else if (global.time == 0)
    audio_play_sound(snd_count_end,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Replace frame

//If the card has not been picked up yet.
if (!ready) {

    alarm[0] = 10;
    if (image_index != 2)
        image_index++;
    else
        image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goal card logic

//If the card has been collected.
if (ready) {

    //Is the stream playing?
    if (!FMODInstanceIsPlaying(stream)) {
    
        //Is there not time left?
        if ((global.time == 0) &amp;&amp; (!ready2)) {
        
            //Time has been collected
            ready2 = 1;
            
            //Return to map
            alarm[3] = 120;
        }
    }
    
    //Destroy all objects under the effects of 'obj_physicsparent'.
    with (obj_physicsparent) {
    
        //Create bonus coins
        instance_create(round(bbox_left+bbox_right)/2-8,round(bbox_top+bbox_bottom)/2-8,obj_blockcoin_goal);
    
        //Create smoke effect
        instance_create(round(bbox_left+bbox_right)/2-8,round(bbox_top+bbox_bottom)/2-8,obj_smoke);
        
        //Destroy
        instance_destroy();
    }        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect the card and clear the level.

//Deny if Mario is behind the scenery.
if (obj_mario.depth == 16)
exit;

//Create goal mario
instance_create(other.x,other.y,obj_mario_goal);

//Destroy Mario
with (obj_mario) instance_destroy();

//Stop streams
FMODInstanceStop(global._stream_pswitch);
global._stream_pswitch = -1;
FMODInstanceStop(global._stream_starman);
global._stream_starman = -1;

//Stop music, timer and pswitch effects.
with (obj_levelmanager) {

    //Disable music playing
    musicdisable = 1;

    //Stop music
    alarm[1] = 1;
    
    //Stop timer
    alarm[2] = 0;
    
    //Stop P-Switch effect
    if (switchon)
        alarm[8] = 1;
}

//Clear the level
global.clear = 1;

//Card collected
ready = 1;

//Play stream
event_user(0);

//Get card
event_user(2);

//Get points off time
alarm[1] = 280;

//Display "Course Clear"
alarm[4] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up a spinning card sprite.

mycard = instance_create(x,y,obj_goal_get);
with (mycard) {

    vspeed = -3;
    switch (other.image_index) {
    
        case (0): sprite_index = spr_goalcard_mush; break;
        case (1): sprite_index = spr_goalcard_flower; break;
        case (2): sprite_index = spr_goalcard_starman; break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play special stream and award lives.

//Check up if cards B and C are the same as card A.
if ((global.card[0] == global.card[1]) &amp;&amp; (global.card[0] == global.card[2])) {

    //If all three cards are mushrooms.
    if (global.card[0] == 0) {
    
        //Play stream
        stream = FMODSoundPlay(global._track_fireworks, 0);
        
        //Set the card type
        cardtype = 1;
        
        //Get extra lives
        alarm[2] = 120;
    }
    
    //Otherwise, if all three cards are fire flowers.
    else if (global.card[0] == 1) {
    
        //Play stream
        stream = FMODSoundPlay(global._track_fireworks, 0);
        
        //Set the card type
        cardtype = 2;
        
        //Get extra lives
        alarm[2] = 120;
    }
    
    //Otherwise, if all three cards are starmen.
    else if (global.card[0] == 2) {
    
        //Play stream
        stream = FMODSoundPlay(global._track_fireworks, 0);
        
        //Set the card type
        cardtype = 3;
        
        //Get extra lives
        alarm[2] = 120;
    }
}

//Otherwise, if all cards does not match.
else {

    //Play stream
    stream = FMODSoundPlay(global._track_bonuswin, 0);
    
    //Set the card type
    cardtype = 0;
    
    //Get extra lives
    alarm[2] = 120;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play stream and get card id

//If card A is not set.
if (global.card[0] == -1) {

    //Play stream
    stream = FMODSoundPlay(global._track_clear, 0);
    
    //Set the image for card A.
    global.card[0] = image_index;
}

//Otherwise, if card A is set and card B is not.
else if ((global.card[0] != -1) &amp;&amp; (global.card[1] == -1)) {

    //Play stream
    stream = FMODSoundPlay(global._track_clear, 0);
    
    //Set the image for card B.
    global.card[1] = image_index;
}

//Otherwise, if both card A and card B are set and card C is not.
else if ((global.card[0] != -1) &amp;&amp; (global.card[1] != -1) &amp;&amp; (global.card[2] == -1)) {

    //Set the image for card C.
    global.card[2] = image_index;
    
    //Play special stream and get lives.
    event_user(1);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw both card and box

//Box
draw_sprite(spr_goalbox,0,round(xstart),round(ystart));

//Card
if (!ready) {

    draw_sprite(sprite_index,-1,round(x),round(y));
}
    
//Display course clear
if (ready3 &gt; 0) {

    //Draw "Course Clear" text
    draw_sprite(spr_courseclear,ready3,view_xview[0]+47,view_yview[0]+35);
    
    //Draw obtained card
    if (ready3 == 2)
        draw_sprite(sprite_index,image_index,view_xview[0]+184,view_yview[0]+64);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
