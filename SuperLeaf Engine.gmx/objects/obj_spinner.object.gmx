<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_raccoon_spin</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A tail spin

//Play the spin sound.
audio_play_sound(snd_spin,0,0);

//Set the depth
depth = obj_mario.depth;

//Animate.
image_speed = 0.3;

//Use the tanooki spin sprite if Mario is in a tanooki suit
if (global.powerup = cs_tanooki) {

    sprite_index = spr_mario_tanooki_spin;
}

//Make Mario invisible
obj_mario.visible = false;

//Set the palette sprite.
pal_sprite = spr_palette;
current_pal = 0;

//Combo
hitcombo = 0;

//Create a block bumper
bumper = instance_create(x,y,obj_blockbumper);
with (bumper) {

    alarm[0] = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario visible and destroy the bumper.

//Make Mario visible.
obj_mario.visible = true;

//Destroy the bumper.
with (bumper) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Snap into Mario if he does exist and destroy if Mario does not have the correct suits.
if (instance_exists(obj_mario)) {

    //If Mario does have the raccoon or tanooki suit.
    if (global.powerup == cs_raccoon)
    || (global.powerup == cs_tanooki) {
    
        x = round(obj_mario.x);
        y = round(obj_mario.y);
    }
    else {
    
        instance_destroy();
        exit;
    }
}
else {

    instance_destroy();
    exit;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update the palette sprite.

current_pal = wrap(obj_mario.isflashing,0,pal_swap_get_pal_count(pal_sprite)-1);

//If Mario has the small, big or raccoon powerups.
if (global.powerup == cs_raccoon) {

    pal_sprite = spr_palette;
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_tanooki) {

    pal_sprite = spr_palette_tanooki;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemyparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with a enemy.

//Deny if Mario is behind the scenery.
if (obj_mario.depth == 16) {

    if (obj_mario.tile12 &gt; -1) || (obj_mario.tile15 &gt; -1)
        exit;
}

//Do actions depending of the sprite.
if (other.spinproof == false)
    kill_special();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

if (instance_exists(obj_mario)) {

    //Set the palette.
    if (obj_mario.isflashing &gt; 0) {
    
        pal_swap_set( pal_sprite, current_pal);    
    }
    
    //Draw Mario Shaded
    draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,obj_mario.xscale,1,0,c_white,image_alpha);
    if (global.hwrap) {
    
        if (x &gt; room_width-(abs(sprite_width/2))) {
        
            draw_sprite_ext(sprite_index,-1,round(x)-room_width,round(y)+1,obj_mario.xscale,1,0,c_white,image_alpha);
        }
        else if (x &lt; (abs(sprite_width/2))) {
        
            draw_sprite_ext(sprite_index,-1,round(x)+room_width,round(y)+1,obj_mario.xscale,1,0,c_white,image_alpha);
        }
    }
    
    //Reset Shader
    shader_reset();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
