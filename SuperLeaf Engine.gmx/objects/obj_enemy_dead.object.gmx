<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemyicon_b</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///You killed an enemy, you monster. (lol jk)

//Do not animate.
image_speed = 0;

//Set the gravity
gravity = 0.2;

//Set the vertical scale and position
image_yscale = -1;
alarm[1] = 1;

//Make it swim or not swim
if (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_top,obj_swim,0,1))
    swimming = true;
else
    swimming = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Revert the vertical scale if the sprite is equal to the ones below.

//Boss Bass
if (sprite_index == spr_bossbass) {

    image_yscale = 1;
    y -= 16;
}

//Lakitu
else if (sprite_index == spr_lakitu) {

    image_yscale = 1;
    y -= 16;
}

//Lava lotus
else if (sprite_index == spr_lavalotus) {

    image_yscale = 1;
    y -= 16;
}

//Thwomp
else if (sprite_index == spr_thwomp) {

    image_yscale = 1;
    y -= 16;
}

//Hammer Bros. family
else if ((sprite_index == spr_hammerbro) || (sprite_index == spr_boomerangbro) || (sprite_index == spr_firebro) || (sprite_index == spr_sledgebro)) {

    image_yscale = 1;
    y -= 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change horizontal speed

hspeed = hspeed*-1;
alarm[0] = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dead enemy logic.

//Check if the enemy makes contact with water.
water = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_swim,0,0);
if (water) {

    //If the object makes contact with water.
    if (!swimming) {
    
        //Swim
        swimming = true;
        
        //Stop vertical speed.
        vspeed = 0;
    }
    
    //Gravity
    gravity = 0.0625;
    
    //Cap vertical speed
    if (vspeed &gt; 0.5)    
        vspeed = 0.5;
}
else {

    //Stop swimming.
    swimming = false;
    
    //Gravity
    gravity = 0.2;
    
    //Cap vertical speed
    if (vspeed &gt; 4)    
        vspeed = 4;
}

//Cap horizontal speed
if ((hspeed &gt; 0.6) &amp;&amp; (hspeed &lt; 2))
hspeed = 0.6;
else if ((hspeed &gt; -2) &amp;&amp; (hspeed &lt; -0.6))
hspeed = -0.6;

//Destroy when below the view.
if (y &gt; view_yview[0]+336)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_quicksand">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quicksand logic

if (gravity &gt; 0) {
    
    //Cap hspeed
    hspeed = 0;
    
    //Cap vspeed
    if (vspeed &lt; 0)    
        vspeed = 0;
    else if (vspeed &gt; 0.1)
        vspeed = 0.1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw killed enemy

draw_sprite_ext(sprite_index,-1,round(x),y,image_xscale,image_yscale,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
