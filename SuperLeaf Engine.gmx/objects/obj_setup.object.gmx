<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The object that sets up the minigame to be used.

//Do not animate.
image_speed = 0;

//The frame mario will use.
mario = 1;
switch (global.powerup) {

    //Set up Small Mario pose.
    case (cs_small): {
    
        mario = 0;
    } break;
    
    //Set up Raccoon Mario pose.
    case (cs_raccoon): {
    
        mario = 2;
    }
}

//Display message
alarm[0] = 30;

//Play music
alarm[1] = 1;

//Display message
showing = 0;

//Print text
a = 0;

//Message to be displayed.
if (global.mg == 0)
    message = "Line up the pictures and#get a prize!#You only get one try.";
else
    message = "Flip over any two cards#and see if they match.#Miss twice and you're out!";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to the assigned minigame

if (instance_number(obj_fade_in) == 0) {

    //Create a fade in effect.
    ID = instance_create(0,0,obj_fade_in);
    with (ID) {
    
        if (global.mg)
            target = rm_cardminigame;
        else
            target = rm_rouletteminigame;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Play music

global._stream_minigame = FMODSoundLoop(global._track_slotscreen,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display message

//Display
showing = true;

//If the text is not displayed fully.
if (a &lt; string_length(message)) {
    
    //Repeat
    alarm[0] = 7;
    
    //Play/Stop sound
    audio_stop_sound(snd_kick8);
    audio_play_sound(snd_kick8,0,0);
}

//Otherwise, if it's displayed completely.
else {

    //Go to the minigame
    alarm[2] = 120;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start room.

//Call the HUD object.
instance_create(0,0,obj_hud);

//Open up a curtain.
instance_create(0,0,obj_curtain_in);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario, Toad and the textbox.

//Draw mario
draw_sprite_ext(spr_mario_minigame,mario,view_xview[0]+32,view_yview[0]+81,1,1,0,c_white,1);

//Draw toad
draw_sprite_ext(spr_toad_minigame,0,view_xview[0]+192,view_yview[0]+81,1,1,0,c_white,1);

//Font
draw_set_font(global.font);

//Draw the textbox and the text up to the number of letters that should be displayed
if (showing == 1) {

    //Text box
    draw_sprite_ext(spr_textbox_minigame,0,view_xview[0]+20,view_yview[0]+43,1,1,0,c_white,1);
    
    //Text
    if (a &lt; string_length(message)) {
    
        a += 0.5;
    }
    draw_text_colour(view_xview[0]+33,view_yview[0]+47,string_copy(message,1,a),c_white,c_white,c_white,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Skip this

if (showing) {

    alarm[2] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
