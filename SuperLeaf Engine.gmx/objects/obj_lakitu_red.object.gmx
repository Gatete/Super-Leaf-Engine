<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lakitu</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_lakitu</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Red Egg Lakitu

/*
**  This item uses creation code!
**
**  xmin = Minimum x coordinate where this enemy is generated.
**  xmax = Maximum x coordinate where this enemy is generated, default is set to the width of the room.
*/

//Default values:
xmin = 0;
xmax = room_width;

//Animate
image_speed = 0.15;

//Prepare to enter in view
alarm[10] = 2;

//Throw eggs
alarm[0] = 120;

//Call the inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate a new lakitu

with (instance_create(x,ystart,obj_enemy_tick)) {

    sprite_index = spr_lakitu;
    type = 1;
    xmin = other.xmin;
    xmax = other.xmax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw the egg.

//Create an egg.
myegg = instance_create(x,y-16,obj_lakitu_egg);
with (myegg) {

    //Set the sprite of the egg.
    sprite_index = spr_lakitu_egg_red;

    //Set the vertical speed
    vspeed = -4;

    //Set the horizontal speed.
    hspeed = choose(-1,1);
}

//Repeat the process
alarm[0] = 120;

//Animate
image_speed = 0.15;

//Set the sprite
sprite_index = spr_lakitu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare an egg to throw.

//If Mario does exist
if (instance_exists(obj_mario)) {

    //If Mario is inside the action area.
    if ((obj_mario.x &gt; xmin) &amp;&amp; (obj_mario.x &lt; xmax)) {
    
        //If there's less than 6 eggs inside the view.
        if (instance_number(obj_spiny) &lt; 6) {
    
            //Set the sprite
            sprite_index = spr_lakitu_throw;
            
            //Animate
            image_speed = 0.3;
            image_index = 0;
        }
        
        //Otherwise, wait until there's less than 6 eggs inside the view.
        else {

            alarm[0] = 1;
        }
    }
    
    //Otherwise, wait until Mario is inside the action area.
    else {
    
        alarm[0] = 1;
    }
}

//Otherwise, if Mario does not exist.
else {

    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
