<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_thwomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Left Thwomp

//Animate
image_speed = 0;

//Thwomp state
thwompy = 0;

//Grav. direction
gravity_direction = 180;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set flags and dead sprite

//Set spiked flag
spiked = true;

//Set fireproof flag
fireproof = true;

//Set spinproof flag
spinproof = true;

//Set blockproof flag
blockproof = true;

//Set the dead sprite
deadspr = spr_thwomp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to start position

//Set the vertical speed
hspeed = 1;

//Set the thwomp state
thwompy = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Thwomp logic

//If the thwomp has not fall yet.
if (thwompy == 0) {

    //If Mario does exists
    if (instance_exists(obj_mario)) {
    
        //If Mario'x is 32 pixels nearby the thwomp.
        if (collision_rectangle(bbox_left-112,bbox_top,bbox_left,bbox_bottom,obj_mario,0,0)) {
        
            //Smash Mario
            thwompy = 1;
            
            //Set the gravity
            gravity = 0.2;
        }
    }
}

//If the thwomp is going to the right
else if ((thwompy == 3) &amp;&amp; (x &gt; xstart)) {

    //Stop vertical speed
    hspeed = 0;
    x = xstart;
    
    //Allow smash
    thwompy = 0;
}

//Cap vertical speed
if (hspeed &lt; -4)
    hspeed = -4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision

//If there's a platform nearby and Mario's vertical speed is greater than 0.
if ((bbox_left &lt; other.bbox_right) &amp;&amp; (hspeed &lt; 0)) {

    //Snap to position.
    x = other.bbox_right+13;
    
    //Ascend
    if (thwompy == 1) {
    
        //Play sound
        audio_play_sound(snd_thwomp,0,0);
        
        //Smash ground
        thwompy = 2;
        
        //Go up
        alarm[0] = 60;
        
        //Create smoke effects    
        instance_create(bbox_left-8,bbox_top-8,obj_smoke);
        instance_create(bbox_left-8,bbox_bottom-8,obj_smoke);
    }
    
    //Stop vertical speed.
    hspeed = 0;
    gravity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
