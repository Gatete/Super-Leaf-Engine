<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_platformparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A falling platform.

//Make the platform fall.
ready = 0;

//Create a temporary platform.
ID = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate a new platform.

if (ready == 2) {

    //If the starting point is outside the view.
    if (xstart-sprite_width/2 &lt; view_xview[0]-48)
    || (ystart &lt; view_yview[0]-16)    
    || (xstart-sprite_width/2 &gt; view_xview[0]+256)
    || (ystart &gt; view_yview[0]+256) {
    
        //Create a new platform
        instance_create(xstart,ystart,obj_platform_fall);
        
        //Destroy the old platform
        instance_destroy();
    }
    
    //Otherwise, retrigger.
    else {
    
        alarm[0] = 1;
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Falling platform logic.

//If Mario overlaps the platform.
if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_mario,0,0))
&amp;&amp; (obj_mario.state &lt; 2) 
&amp;&amp; (obj_mario.y &lt; bbox_top-11) { 
    
    //Make it fall.
    if (ready == 0) {
    
        //Make it fall.
        ready = 1;
        
        //Set up the gravity.
        gravity = 0.07;
    }
    
    //Snap Mario above the platform.
    if (!collision_line(obj_mario.bbox_left,bbox_top-5,obj_mario.bbox_right,bbox_top+1,obj_solidtop,1,1)) 
    &amp;&amp; (!collision_line(obj_mario.bbox_left,bbox_top-5,obj_mario.bbox_right,bbox_top+1,obj_platformparent,1,1)) {

        obj_mario.y = ceil(bbox_top-16);
    }
}

//Cap vertical speed.
if (vspeed &gt; 2.5) {

    vspeed = 2.5;
    if ((y &gt; room_height-32) &amp;&amp; (ready == 1)) {
    
        ready = 2;
        alarm[0] = 60;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
