<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario got a powerup, change him.

//If the ocean object does exist.
if (instance_exists(obj_ocean)) {

    obj_ocean.visible = false;
}

//If a foreground layer exists
if (instance_exists(obj_foreground)) {

    with (obj_foreground) visible = false;
}

//Sets and starts the animation sequences.
ready = 0;

//How many times does the animation loop?
loop = 0;

//Sets the animation to follow.
//0: Small to big
//1: Big to small
//2: Fire
//3: Poof
sequence = 0;

//Make Mario invisible
if (instance_exists(obj_mario)) {

    if (global.kuriboshoe) {
    
        with (obj_kuriboshoe_ride) visible = false;
    }

    //Make Mario invisible.
    obj_mario.visible = false;
    
    //Snap to position.
    x = round(obj_mario.x);
    y = round(obj_mario.y);
    
    //Set the depth
    depth = obj_mario.depth;
    
    //Hereby Mario's facing direction.
    image_xscale = obj_mario.xscale;    
}

//Start animations
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario visible

with (obj_mario) {

    visible = true;
    if (global.kuriboshoe) {
    
        with (obj_kuriboshoe_ride) visible = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up animation sequence and take up a screenshot.

//Take a screenshot.
back = background_create_from_surface(application_surface,0,0,room_width,room_height,0,0);

//Deactivate all instances.
instance_deactivate_all(true);

//Activate HUD
instance_activate_object(obj_hud);

//Activate ocean
instance_activate_object(obj_ocean);
if (instance_exists(obj_ocean)) {

    obj_ocean.visible = true;
}

//Activate foreground layers
instance_activate_object(obj_foreground);
if (instance_exists(obj_foreground)) {

    with (obj_foreground) visible = true;
}

//Activate persistent object.
instance_activate_object(obj_persistent);

//Set the animation sequence.
switch (sequence) {

    //Small to Big
    case (0): { 
    
        sprite_index = spr_mario_grow;
        image_speed = 0.25;
    } break;
    
    //Big to Small
    case (1): {
    
        sprite_index = spr_mario_shrink;
        image_speed = 0.25;
    } break;
    
    case (2): {
    
        sprite_index = spr_mario_powerup;
        image_speed = 0.5;
        loop = 4;
    } break;
    
    case (3): {
    
        sprite_index = spr_mario_transform;
        image_speed = 0.3;
    } break;
}

//Animation has been set.
ready = true;

//Make the object visible.
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///If the animation has ended and no more loops are needed.

if (ready) {

    //Does the animation still loop.
    if (loop &gt; 0) {
    
        //Decrement loop
        loop--;
    }
    else {
    
        //Delete the screenshot if it exists.
        if (background_exists(back)) {
        
            background_delete(back);
        }
        
        //Activate all instances.
        instance_activate_all();
        
        //Destroy
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

//If the animation has been set.
if (ready) {

    if (background_exists(back)) {
    
        //Disable alpha blending.
        draw_enable_alphablend(0);
        
        //Draw the screenshot
        draw_background(back,view_xview[0],view_yview[0]);
        
        //Enable alpha blending.
        draw_enable_alphablend(1);
    }
}

//Draw Mario Shaded
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
if (global.hwrap) {

    if (x+8 &gt; view_wview[0]) {
    
        draw_sprite_ext(sprite_index,-1,round(x)-view_wview[0],round(y)+1,image_xscale,1,0,c_white,image_alpha);
    }
    else if (x-8 &lt; view_xview[0]) {
    
        draw_sprite_ext(sprite_index,-1,view_wview[0]+round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
    }
}

//If Mario is wearing a shoe.
if (global.kuriboshoe) {

    //Draw the shoe.
    draw_sprite_ext(spr_kuriboshoe,0,round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
    if (global.hwrap) {
    
        if (x+8 &gt; view_wview[0]) {
        
            draw_sprite_ext(spr_kuriboshoe,0,round(x)-view_wview[0],round(y)+1,image_xscale,1,0,c_white,image_alpha);
        }
        else if (x-8 &lt; view_xview[0]) {
        
            draw_sprite_ext(spr_kuriboshoe,0,view_wview[0]+round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
        }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
