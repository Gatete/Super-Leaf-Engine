<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_lakitu</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_enemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lakitu

/*
**  This item uses creation code!
**
**  xmin = Minimum x coordinate where this enemy is generated.
**  xmax = Maximum x coordinate where this enemy is generated, default is set to the width of the room.
*/

//Default values:
xmin = 0;
xmax = room_width;

//Animate
image_speed = 0.15;

//Prepare to enter in view
alarm[10] = 2;

//Throw eggs
alarm[0] = 120;

//Call the inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate a new lakitu

with (instance_create(x,ystart,obj_enemy_tick)) {

    sprite_index = spr_lakitu;
    type = 0;
    xmin = other.xmin;
    xmax = other.xmax;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare to enter in view.

//Make it visible
visible = true;

//Snap to the side of the screen that it is closest to.
if (obj_levelmanager.x &gt; (xmax-xmin)/2+xmin)
    x = view_xview[0]-64;
else
    x = view_xview[0]+view_wview[0]+64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throw the egg.

//Create an egg.
myegg = instance_create(x,y-16,obj_lakitu_egg);
with (myegg) {

    //Set the vertical speed
    vspeed = -4;

    //Set the horizontal speed.
    hspeed = choose(-1,1);
}

//Repeat the process
alarm[0] = 120;

//Animate
image_speed = 0.15;

//Set the sprite
sprite_index = spr_lakitu;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare an egg to throw.

//If Mario does exist
if (instance_exists(obj_mario)) {

    //If Mario is inside the action area.
    if ((obj_mario.x &gt; xmin) &amp;&amp; (obj_mario.x &lt; xmax)) {
    
        //If there's less than 6 eggs inside the view.
        if (instance_number(obj_lakitu_egg) &lt; 6) {
    
            //Set the sprite
            sprite_index = spr_lakitu_throw;
            
            //Animate
            image_speed = 0.3;
            image_index = 0;
        }
        
        //Otherwise, wait until there's less than 6 eggs inside the view.
        else {

            alarm[0] = 1;
        }
    }
    
    //Otherwise, wait until Mario is inside the action area.
    else {
    
        alarm[0] = 1;
    }
}

//Otherwise, if Mario does not exist.
else {

    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation bug fix

if (sprite_index != spr_lakitu_throw)
    image_speed = 0.15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lakitu logic

//Select an object to follow.
if (instance_exists(obj_mario)) {

    follow = obj_mario;
}
else if (instance_exists(obj_levelmanager)) {

    follow = obj_levelmanager;
}
else {

    follow = noone;
    hspeed = 0;
}

//If there's an object to follow.
if (follow != noone) {

    //If the followed object is inside the action area.
    if (follow.x &gt; xmin) &amp;&amp; (follow.x &lt; xmax) {
        
        //Move towards the followed object.
        if (follow.x &gt; x)    
            hspeed += 0.1;
        else if (follow.x &lt; x)       
            hspeed += -0.1;

        //Keep it in view
        if (x &lt; view_xview[0]-15)
            x = view_xview[0]-15;
        else if (x &gt; view_xview[0]+view_wview[0]+15)
            x = view_xview[0]+view_wview[0]+15;
    }
    
    //Otherwise, get out the action area.
    else {
    
        if (follow.x &gt; (xmax-xmin)/2+xmin)           
            hspeed += 0.1;
        else if (follow.x &lt; (xmax-xmin)/2+xmin)        
            hspeed += -0.1;           
    }
    
    //Cap horizontal speed
    if (hspeed &gt; 2.5)
        hspeed = 2.5;
    else if (hspeed &lt; -2.5)
        hspeed = -2.5;
}

//Stay in sight
y = view_yview[0]+31;
    
//Snap outside the level when outside the view
if (x &lt; view_xview[0]-16)
    x = -16
else if (x &gt; view_xview[0]+view_wview[0]+16)
    x = room_width+16
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collision with Mario.

//Deny event if starman is active.
if (instance_exists(obj_invincibility))
exit;

//Deny if Mario is behind the scenery.
if (obj_mario.depth == 16) {

    if (obj_mario.tile12 &gt; -1) || (obj_mario.tile15 &gt; -1)
        exit;
}

//If Mario is sliding down a slope.
if (!other.sliding) {

    //If Mario is above and moving down.
    if ((other.bbox_bottom &lt; bbox_top-vspeed+5) &amp;&amp; (other.vspeed &gt;= 0)) {

        //If Mario is wearing a kuribo shoe.
        if (global.kuriboshoe) {
        
            //Play a stomp sound
            audio_play_sound(snd_stomp,0,0);
            
            //Execute combo script.
            musical_scale_fixed(other.id,id,0,4);
            
            //Kill enemy
            event_user(6);
            
            //Make Mario jump
            with (other) event_user(1);            
                                
            //Create hit effect.
            ID = instance_create(other.x,other.bbox_bottom-8,obj_smoke);
            with (ID) {
            
                sprite_index = spr_spinthump;
            }    
        }
        
        //Otherwise, use default event.
        else {
        
            //If the enemy is not spiked.
            if (!spiked) {
        
                //Play a stomp sound
                audio_play_sound(snd_stomp,0,0);
                
                //Execute combo script.
                musical_scale_fixed(other.id,id,0,4);
            
                //Default stomp event.
                event_user(5);
                
                //Make Mario jump
                with (other) event_user(1);            
                                    
                //Create hit effect.
                ID = instance_create(other.x,other.bbox_bottom-8,obj_smoke);
                with (ID) {
                
                    sprite_index = spr_spinthump;
                }
            }
            
            //Otherwise, if the enemy is spiked.
            else {
            
                //Hurt Mario
                with (other) event_user(0);                
            }
        }
    }
    else {
    
        //Hurt Mario
        with (other) event_user(0);
    }
}

//Otherwise, if Mario is sliding down a slope.
else {

    //If the enemy is not spiked.
    if (!spiked) {
    
        //Play 'kick' sound
        audio_play_sound(snd_kick,0,0);
    
        //Get 100 points
        with (instance_create(round(bbox_left+bbox_right)/2-8,round(y),obj_score)) event_user(0);
        
        //Kill enemy
        event_user(4);
        
        //Create hit effect.
        ID = instance_create(other.x,other.y,obj_smoke);
        with (ID) {
        
            sprite_index = spr_spinthump;
        }
    }
    
    //Otherwise, if the enemy is spiked.
    else {
    
        //Hurt Mario
        with (other) event_user(0);        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Grab and egg and throw it later

if (sprite_index == spr_lakitu_throw) {

    //Stop animation
    image_speed = 0;
    image_index = 6;
    
    //Throw the egg
    alarm[1] = 30;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
