<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_nipper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nipper Plant

//Jumping
jumping = false;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

//Set spiked flag
spiked = true;

//Set dead sprite
deadspr = spr_nipper;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

if (!jumping) {

    sprite_index = spr_nipper;
    if (image_speed != 0.15)
        image_speed = 0.15;
}
else {

    sprite_index = spr_nipper_jump;
    if (image_speed != 0.3)
        image_speed = 0.3;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Nipper Plant logic

//Make the nipper jump when Mario is nearby.
if (instance_exists(obj_mario)) {

    //If Mario is nearby the plant.
    if ((obj_mario.x &gt; x-20) &amp;&amp; (obj_mario.x &lt; x+20) &amp;&amp; (obj_mario.y &lt;= y)) {
    
        //If the plant has not jumped.
        if (!jumping) {
        
            //Set the animation speed
            image_speed = 0.3;            
            
            //Jump
            jumping = true;            
            
            //Set the vertical speed
            if (!swimming)           
                vspeed = -5;
            else
                vspeed = -2.5;
        }
    }
}

//Call the inherited event
event_inherited();

//Set up the facing direction.
if (instance_exists(obj_mario)) {

    if (obj_mario.x &gt; x)
        xscale = 1;
    else if (obj_mario.x &lt; x)
        xscale = -1;
}
else {

    if (obj_levelmanager.x &gt; x)
        xscale = 1;
    else if (obj_levelmanager.x &lt; x)
        xscale = -1;   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slope Collision

//If the object vertical speed is equal/greater than 0.
if (vspeed &gt;= 0) { 
    
    //Stop vertical speed.
    vspeed = 0;
    gravity = 0;
    
    //Make it able to jump again.
    if (jumping) {
    
        //Jump again
        jumping = false;
    }
}

//Stay embed on the slope.
if (!collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom,obj_solidtop,0,0)) {

    //Move 1 pixel upwards
    while (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom-1,obj_slopeparent,1,0))
        y--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision

//If there's a platform nearby and Mario's vertical speed is greater than 0.
if ((bbox_bottom &lt; other.yprevious+5) &amp;&amp; (vspeed &gt; 0)) {

    //Snap to position.
    y = other.yprevious-16;
    
    //Stop vertical speed.
    vspeed = 0;
    gravity = 0;
    
    //Make it able to jump again.
    if (jumping) {
    
        //Jump again
        jumping = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default floor / ceiling collisions.

//Floor collision
if ((collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+1,obj_solidtop,0,0)) &amp;&amp; (!vspeed &lt; 0)) { //If the object is on contact with the floor.

    //Stop vertical speed.
    vspeed = 0
    gravity = 0;
}

//Otherwise, if the object is not in contact with the floor.
else {

    //Set up the gravity.
    if (!swimming) {
    
        gravity = 0.35;
        if (vspeed &gt; 4)
            vspeed = 4;
    }
    else {

        gravity = 0.0625;
        if (vspeed &gt; 0.5)
            vspeed = 0.5;
    }
}

//Slope collision
if (vspeed &gt;= 0) {

    //45ยบ Right Slope
    if (place_meeting(x,y+4,obj_slope_sr)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4
        }
    }
    
    //45ยบ Left Slope
    else if (place_meeting(x,y+4,obj_slope_sl)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4;
        }
    }
    
    //22.5ยบ Right Slope
    else if (place_meeting(x,y+2,obj_slope_r)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
    
    //22.5ยบ Left Slope
    else if (place_meeting(x,y+2,obj_slope_l)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
}

//Ceiling collision
if (vspeed &lt; 0) {

    //If the object is moving upwards and there's a ceiling on the way...
    if (collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top-1,obj_solid,1,0)) { 
        
        //Stop vertical movement.
        vspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
