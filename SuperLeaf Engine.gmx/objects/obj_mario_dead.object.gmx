<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mario_dead</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario is dead, are you happy?

//Play sound
stream = FMODSoundPlay(global._track_dead, 0);

//Stop both pswitch and starman streams
FMODInstanceStop(global._stream_pswitch);
FMODInstanceStop(global._stream_starman);

//Stop stream and timer
obj_levelmanager.alarm[1] = 1;

//If the ocean object does exist.
if (instance_exists(obj_ocean)) {

    obj_ocean.visible = false;
}

//If a foreground layer exists
if (instance_exists(obj_foreground)) {

    with (obj_foreground) visible = false;
}

//Do not animate
image_speed = 0;
image_index = 0;

//Check if the background is drawn
ready = false;

//Subtract a life
lives--;

//Create background
alarm[0] = 2;

//Jump
alarm[1] = 60;

//Restart the room
alarm[2] = 200;

//Return to start position
global.died = true;

//Reset powerup
global.powerup = cs_small;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to map

if (lives &gt; 0) {

    //Go to the assigned room
    if (instance_number(obj_fade_in) == 0) {
    
        //Create a fade in effect.
        ID = instance_create(0,0,obj_fade_in);
        with (ID) {
        
            target = rm_map;
        }
    }
}
else
    game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move up if inside the view

if (y &lt; view_yview[0]+192) {

    vspeed = -4;
    gravity = 0.15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take up a screenshot.

//Take a screenshot.
back = background_create_from_surface(application_surface,0,0,room_width,room_height,0,0);

//Deactivate all instances.
instance_deactivate_all(true);

//Activate HUD
instance_activate_object(obj_hud);

//Activate ocean
instance_activate_object(obj_ocean);
if (instance_exists(obj_ocean)) {

    obj_ocean.visible = true;
}

//Activate foreground layers
instance_activate_object(obj_foreground);
if (instance_exists(obj_foreground)) {

    with (obj_foreground) visible = true;
}

//Activate persistent object.
instance_activate_object(obj_persistent);

//Screenshot taken.
ready = true;

//Make the object visible.
visible = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop and free the stream.

FMODInstanceStop(stream);
stream = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

//If the background has been set.
if (ready) {

    if (background_exists(back)) {
    
        //Disable alpha blending.
        draw_enable_alphablend(0);
        
        //Draw the screenshot
        draw_background(back,view_xview[0],view_yview[0]);
        
        //Enable alpha blending.
        draw_enable_alphablend(1);
    }
}

//Draw Mario Shaded
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
if (global.hwrap) {

    if (x+8 &gt; view_wview[0]) {
    
        draw_sprite_ext(sprite_index,-1,round(x)-view_wview[0],round(y)+1,image_xscale,1,0,c_white,image_alpha);
    }
    else if (x-8 &lt; view_xview[0]) {
    
        draw_sprite_ext(sprite_index,-1,view_wview[0]+round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
