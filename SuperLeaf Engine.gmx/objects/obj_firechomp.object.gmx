<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_firechomp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Chomp

//Do not animate
image_speed = 0;
image_index = 0;

//Stop him
ready = 0;

//Fireball variables
anim = 0.2;
followers = 5;
closeness = 8;
amount_previous = 2480;

//Set fireballs start position
for (i=0; i&lt;amount_previous; i++;) {

    oldx[i] = x;
    oldy[i] = y;
}

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving

//Stop and shoot
alarm[0] = 150;

//Set fireproof flag
fireproof = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode

instance_create(x,y,obj_explosion);
instance_destroy();
exit;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resume movement

//Resume movement
ready = 0;

//Set animation
image_speed = 0;
image_index = 0;

//Shoot another fireball
alarm[0] = 150;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animate him

//Animate
if (followers == 1) {

    //Set the sprite
    sprite_index = spr_firechomp_th;    
    
    //Animate
    image_speed = 0.5;
        
    //Explode
    alarm[2] = 150;
}
else {

    //Animate
    image_speed = 0.15;
    
    //Stop
    ready = 1;
    
    //Decrement fires
    followers--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Chomp logic

//Update fireballs animation
anim += 0.2;

//If the object is not spitting a fireball.
if (!ready) {

    //If Mario does exist.
    if (instance_exists(obj_mario)) {
    
        //Follow Mario horizontally.
        if (obj_mario.x &gt; x) {
        
            hspeed += 0.0324;
            if (hspeed &gt; 1)
                hspeed = 1;
        }
        else if (obj_mario.x &lt; x) {
        
            hspeed -= 0.0324;
            if (hspeed &lt; -1)
                hspeed = -1;
        }
        
        //Follow Mario vertically.
        if (obj_mario.y &gt; y) {
        
            vspeed += 0.0324;
            if (vspeed &gt; 1)
                vspeed = 1;
        }
        else if (obj_mario.y &lt; y) {
        
            vspeed -= 0.0324;
            if (vspeed &lt; -1)
                vspeed = -1;
        }
    }
    
    //Otherwise, if Mario does not exist.
    else {
    
        //Follow Mario horizontally.
        if (obj_levelmanager.x &gt; x) {
        
            hspeed += 0.0324;
            if (hspeed &gt; 1)
                hspeed = 1;
        }
        else if (obj_levelmanager.x &lt; x) {
        
            hspeed -= 0.0324;
            if (hspeed &lt; -1)
                hspeed = -1;
        }
        
        //Follow Mario vertically.
        if (obj_levelmanager.y &gt; y) {
        
            vspeed += 0.0324;
            if (vspeed &gt; 1)
                vspeed = 1;
        }
        else if (obj_levelmanager.y &lt; y) {
        
            vspeed -= 0.0324;
            if (vspeed &lt; -1)
                vspeed = -1;
        }    
    }
}

//Otherwise, if it's spitting a fireball.
else if (ready) {

    //Stop movement
    speed = 0;
    
    //Exit
    exit;
}

//Set the facing direction
if (instance_exists(obj_mario)) { //If Mario does exist.

    if (obj_mario.x &gt; x)
        xscale = 1;
    else if (obj_mario.x &lt; x)
        xscale = -1;
}

//Otherwise, if it does not exist.
else {

    if (obj_levelmanager.x &gt; x)
        xscale = 1;
    else if (obj_levelmanager.x &lt; x)
        xscale = -1;    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Manage fireball positions.

oldx[0] = x;
oldy[0] = y;
for (i=amount_previous; i&gt;0; i-=1) {

    oldx[i] = oldx[i-1]
    oldy[i] = oldy[i-1]
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wraps around if enabled on the level.

if (global.hwrap) { //If room wrapping is enabled on the room.
    
    //If Mario is nearby the right boundary of the room.
    if (x &gt; room_width) {
    
        //Make Mario go to the left boundary of the room.
        x -= room_width;
    }    
    
    //Otherwise, if Mario is nearby the left boundary of the room.
    else if (x &lt; 0) {
    
        //Make Mario go to the right boundary of the room.
        x += room_width;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Block / raccoon spin kill event.

event_user(4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kuriboshoe stomp event

event_user(5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stomp event

//Create dead object.
dead = instance_create(x,y+16,obj_enemy_dead);

//Set the sprite
dead.sprite_index = deadspr;

//Set the facing direction
dead.image_xscale = xscale;

//Set a waving movement
dead.hspeed = 0.5;
dead.alarm[0] = 4;

//Set the vertical speed
dead.vspeed = 0;

//If there's some fireballs behind
if (followers &gt; 1) {

    //Dead followers.
    multidead = instance_create(x,y,obj_enemy_multidead);
    with (multidead) {
    
        //Set the enemy parts.
        count = other.followers-1;
        
        //Set the spd
        spd = 0;
        
        //Set the xscale
        xscale = 1;
        
        //Set the sprite
        sprite = spr_fireball;
    }
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill event

//Create dead object.
dead = instance_create(x,y+16,obj_enemy_dead);

//Set the sprite
dead.sprite_index = deadspr;

//Set the facing direction
dead.image_xscale = xscale;

//Set a waving movement
dead.hspeed = 0.5;
dead.alarm[0] = 4;

//Set the vertical speed
dead.vspeed = -6;

//If there's some fireballs behind
if (followers &gt; 1) {

    //Dead followers.
    multidead = instance_create(x,y,obj_enemy_multidead);
    with (multidead) {
    
        //Set the enemy parts.
        count = other.followers-1;
        
        //Set the spd
        spd = -6;
        
        //Set the xscale
        xscale = 1;
        
        //Set the sprite
        sprite = spr_fireball;
    }
}

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resume movement

if (sprite_index == spr_firechomp) {

    //Do not animate
    image_speed = 0;
    image_index = 2;
    
    //Resume movement
    alarm[1] = 16;
    
    //Play a sound
    audio_play_sound(snd_lava,0,0);
    
    //Shoot a fireball towards Mario.
    myfire = instance_create(x,bbox_top+4,obj_firechomp_fire);
    with (myfire) {
    
        if (instance_exists(obj_mario))
            motion_set(point_direction(x,bbox_top+4,obj_mario.x,obj_mario.y),1.25);
        else
            motion_set(point_direction(x,bbox_top+4,obj_levelmanager.x,obj_levelmanager.y),1.25);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Fire Chomp and followers

for (i=1; i&lt;followers; i++;) {

    draw_sprite_ext(spr_fireball,anim,oldx[i*closeness],oldy[i*closeness]+4,1,1,0,c_white,1);
    if (global.hwrap) {
    
        if (oldx[i] &gt; room_width-(abs(sprite_width/2))) {
        
            draw_sprite_ext(spr_fireball,anim,oldx[i*closeness]-room_width,oldy[i*closeness]+4,1,1,0,c_white,1);
        }
        else if (oldx[i] &lt; (abs(sprite_width/2))) {
        
            draw_sprite_ext(spr_fireball,anim,oldx[i*closeness]+room_width,oldy[i*closeness]+4,1,1,0,c_white,1);
        }
    }
}

//Draw Fire Chomp
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
