<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boo</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boo

//Do not animate
image_speed = 0;

//Boo state
boo = 0;

//Leave a trail
alarm[0] = 1;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set flags and dead sprite

//Set spiked flag
spiked = true;

//Set fireproof flag
fireproof = true;

//Set spinproof flag
spinproof = true;

//Set blockproof flag
blockproof = true;

//Set the dead sprite
deadspr = spr_boo;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leave a trail behind

//Repeat the process.
alarm[0] = 4;

//Leave a trail behind
ID = instance_create(x,y,obj_boo_trail);
with (ID) {

    //Set the image index.
    image_index = other.image_index;
    
    //Set the depth
    depth = -1;
    
    //Set the facing direction.
    image_xscale = other.xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

if (boo) {

    if (hspeed == 0)
        image_index = 0;
    else
        image_index = 1;
}
else {

    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Boo Logic

//If Mario does exist and the boo can follow him.
if ((instance_exists(obj_mario)) &amp;&amp; (boo)) {

    //Set the horizontal speed
    if (obj_mario.x &gt; x+7) { //If Mario is at the right of the boo.
    
        //Set the horizontal speed
        hspeed += 0.05;
        
        //Set the facing direction
        if (xscale != 1)
            xscale = 1;
    }
    
    //Otherwise, if Mario is at the left of the boo.
    else if (obj_mario.x &lt; x-8) {
    
        //Set the horizontal speed
        hspeed += -0.05;
        
        //Set the facing direction
        if (xscale != -1)
            xscale = -1;
    }
    
    //Vertical speed.
    if (obj_mario.y &gt; y)
        vspeed += 0.05;
    else if (obj_mario.y &lt; y)
        vspeed += -0.05;
}

//Otherwise, stop him.
else {

    //Slowdown till he stops.
    speed = max(0,abs(speed)-0.1)*sign(speed);
    if (speed &lt; 0.1)
        speed = 0;
}

//Make the boo able or not able to follow Mario
if (instance_exists(obj_mario)) { //If Mario does exist.

    //If Mario is at the right of the boo.
    if (obj_mario.x &gt; x) {
    
        //If Mario is looking to the right.
        if (obj_mario.xscale == 1)
            boo = true;
        else
            boo = false;
    }
    
    //Otherwise, if Mario is at the left of the boo.
    else if (obj_mario.x &lt; x) {
    
        //If Mario is looking to the left.
        if (obj_mario.xscale == -1)
            boo = true;
        else
            boo = false;
    }
}

//Otherwise, make not able to follow.
else {

    boo = false;
}

//Animate
image_index = boo;

//Cap speed
if (speed &gt; 1.2)
    speed = 1.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wraps around if enabled on the level.

if (global.hwrap) { //If room wrapping is enabled on the room.
    
    //If Mario is nearby the right boundary of the room.
    if (x &gt; room_width) {
    
        //Make Mario go to the left boundary of the room.
        x -= room_width;
    }    
    
    //Otherwise, if Mario is nearby the left boundary of the room.
    else if (x &lt; 0) {
    
        //Make Mario go to the right boundary of the room.
        x += room_width;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>425</id>
        <kind>4</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
