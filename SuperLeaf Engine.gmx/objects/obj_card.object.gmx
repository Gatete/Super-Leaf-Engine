<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cardgame_flip</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Is this the card you seek?

//Default Value:
mycard = 0;

//Do not animate
image_speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flip the card back

//If the sprite is not the flip sprite
if (sprite_index == spr_cardgame_cards)
{

    //Switch to the flip sprite
    sprite_index = spr_cardgame_flip;

    //Flip to the last frame in the animation
    image_index = 5;

    //Continue the animation
    alarm[1] = 4;

}

//If the card is not done being flipped
else if (image_index &gt; 0) {

    //Decrement the frame
    image_index -= 1;

    //Continue the animation
    alarm[1] = 4;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Checks if a pair is a match.

if (obj_cardmanager.oncard == mycard) {

    //Check out prizes
    switch (mycard) {
    
        //Mushroom
        case (0): { 
        
            //Play the correct sound
            audio_play_sound(snd_correct,0,0);
        
            //If the inventory is not full...
            if (global.inventory[0] &lt; 28)
            global.inventory[0]++;
            
            //Set the item on the inventory.
            global.inventory[global.inventory[0]] = cs_inventory_mushroom;            
        } break;
        
        //Fire Flower
        case (1): { 
        
            //Play the correct sound
            audio_play_sound(snd_correct,0,0);
            
            //If the inventory is not full...
            if (global.inventory[0] &lt; 28)
            global.inventory[0]++;
            
            //Set the item on the inventory.
            global.inventory[global.inventory[0]] = cs_inventory_fireflower;             
        } break;
        
        //10 Coins
        case (2): {
        
            //Play the correct sound
            audio_play_sound(snd_correct,0,0);
            
            //Get 10 coins
            global.coins += 10;
            if (global.coins &gt;= 100) {
            
                //Subtract 100 coins
                global.coins -= 100;
                
                //Get a life
                lives++;
                
                //Play a sound
                if (!audio_is_playing(snd_1up))
                    audio_play_sound(snd_1up,0,0);
            }
        } break;
        
        //20 Coins
        case (3): {
        
            //Play the correct sound
            audio_play_sound(snd_correct,0,0);
            
            //Get 10 coins
            global.coins += 20;
            if (global.coins &gt;= 100) {
            
                //Subtract 100 coins
                global.coins -= 100;
                
                //Get a life
                lives++;
                
                //Play a sound
                if (!audio_is_playing(snd_1up))
                    audio_play_sound(snd_1up,0,0);
            }
        } break;
        
        //Starman
        case (4): { 
        
            //Play the correct sound
            audio_play_sound(snd_correct,0,0);
            
            //If the inventory is not full...
            if (global.inventory[0] &lt; 28)
            global.inventory[0]++;
            
            //Set the item on the inventory.
            global.inventory[global.inventory[0]] = cs_inventory_star;             
        } break;
                
        //1-UP
        case (5): { 

            //Get a life
            lives++;
            
            //Play a sound
            if (!audio_is_playing(snd_1up))
                audio_play_sound(snd_1up,0,0);    
        } break;
    }
    
    //Let the game progress
    obj_cardmanager.alarm[0] = 80;
    
    //Stop celebrating
    obj_cardmanager.alarm[1] = 60;
    
    //Celebrate
    obj_cardmanager.alarm[2] = 1;
    
    //Increment the total number of cards flipped.
    obj_cardmanager.count += 2;
}

//Otherwise, if the pair is not a match.
else {

    //Play the wrong sound.
    audio_play_sound(snd_wrong,0,0);

    //Increment the number of wrong choices
    obj_cardmanager.wrong += 1;

    //Flip this card
    alarm[1] = 7;

    //Flip the other card in the pair
    with (obj_cardmanager.lastcard) alarm[1] = 28;

    //Let the game progress
    obj_cardmanager.alarm[0] = 70;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish flipping the card

//Switch to the card sprite
sprite_index = spr_cardgame_cards;

//Do not animate
image_speed = 0;

//Pick the appropriate card
image_index = mycard;

//If this is the first card picked for a pair
if (obj_cardmanager.cardcount = 0) {

    //Let the card manager remember that
    obj_cardmanager.cardcount = 1;

    //Make the card manager remember this card's info
    obj_cardmanager.oncard = mycard;
    obj_cardmanager.lastcard = id;

    //Let the game progress
    obj_cardmanager.alarm[0] = 10;
}

//If this is the second card in a pair
else {

    //Reset the count
    obj_cardmanager.cardcount = 0;

    //Check the pair
    alarm[0] = 20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
