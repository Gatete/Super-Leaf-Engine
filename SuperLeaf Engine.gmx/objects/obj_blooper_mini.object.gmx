<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_blooper_mini</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A Baby Blooper

//Do not animate
image_speed = 0;
image_index = 0;

//Does the blooper have a parent?
parent = -1;

//Start moving
alarm[10] = 2;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Apply gravity if needed.

if (!place_meeting(x,y+1,obj_solidtop))
&amp;&amp; (!place_meeting(x,y+1,obj_slopeparent))
    gravity = 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Swim up

//Snap to previous blooper position
x = parent.xprev;
y = parent.yprev;
    
//Set gravity
gravity = 0;

//Sink slowly
alarm[0] = 40;

//Find Mario
if (parent.dir == 1)    
    motion_set(45,1.5);
else if (parent.dir == -1)
    motion_set(135,1.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sink slowly

//Set the gravity
gravity = 0.05;

//Stop vertical speed
vspeed = 0;

//Stop horizontal speed
hspeed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Animation

if (vspeed &lt; 0)
    image_single = 0;
else
    image_single = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mini Blooper logic

//Keep parent active
instance_activate_object(parent);

//Default Wall collisions.
event_user(0);

//Default Floor / Ceiling collisions.
event_user(1);

//Cap vertical speed
if (vspeed &gt; 0.5)
    vspeed = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_swim">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prevent the mini blooper from exit the water.

if (y &lt; other.y) {

    //Snap into position
    y = other.y;
    
    //Stop vertical speed
    vspeed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mario">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hurt Mario

with (other) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default floor / ceiling collisions.

//Floor collision
if ((collision_rectangle(bbox_left,bbox_bottom+1,bbox_right,bbox_bottom+1,obj_solidtop,0,0)) &amp;&amp; (!vspeed &lt; 0)) { //If the object is on contact with the floor.

    //Stop vertical speed.
    vspeed = 0
    gravity = 0;
}

//Slope collision
if (vspeed &gt;= 0) {

    //45ยบ Right Slope
    if (place_meeting(x,y+4,obj_slope_sr)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4
        }
    }
    
    //45ยบ Left Slope
    else if (place_meeting(x,y+4,obj_slope_sl)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 4;
        }
    }
    
    //22.5ยบ Right Slope
    else if (place_meeting(x,y+2,obj_slope_r)) { 
    
        //If the object horizontal speed is lower than 0.
        if (hspeed &lt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
    
    //22.5ยบ Left Slope
    else if (place_meeting(x,y+2,obj_slope_l)) { 
    
        //If the object horizontal speed is greater than 0.
        if (hspeed &gt; 0) { 
    
            //Move x pixels downwards as many horizontal speed the object has to ensure correct slope collision.
            y += 2;
        }
    }
}

//Ceiling collision
if (vspeed &lt; 0) {

    //If the object is moving upwards and there's a ceiling on the way...
    if (collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top-1,obj_solid,1,0)) { 
        
        //Stop vertical movement.
        vspeed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default wall collisions.

if ((hspeed &lt; 0) &amp;&amp; (collision_rectangle(bbox_left-hspeed,bbox_top+4,bbox_left,bbox_bottom-4,obj_solid,0,0)))
|| ((hspeed &gt; 0) &amp;&amp; (collision_rectangle(bbox_right,bbox_top+4,bbox_right+hspeed,bbox_bottom-4,obj_solid,0,0))) {

    //Reverse horizontal speed
    hspeed = -hspeed;
    
    //Prevent getting embed on a slope.
    while (collision_rectangle(bbox_left,bbox_top+4,bbox_left,bbox_bottom-4,obj_solid,0,0))
        x++;
    while (collision_rectangle(bbox_right,bbox_top+4,bbox_right,bbox_bottom-4,obj_solid,0,0))
        x--;        
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
