<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spike</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_deactenemyparent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spike

//Animate
image_speed = 0.15;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change direction

if (hspeed != 0) {

    //If Mario does exist.
    if (instance_exists(obj_mario)) {
    
        if (obj_mario.x &gt; x)
            hspeed = 0.5;
        else if (obj_mario.x &lt; x)
            hspeed = -0.5;
    }
    else {
    
        if (obj_levelmanager.x &gt; x)
            hspeed = 0.5;
        else if (obj_levelmanager.x &lt; x)
            hspeed = -0.5;
    }
}

//Repeat the process
alarm[11] = 60 + random(round(60));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start moving.

//Call inherited event
event_inherited();

//Spit a ball.
alarm[0] = 100;

//Change direction
alarm[11] = 60;

//Set death sprite
deadspr = spr_spike;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Resume walking

//If Mario does exist.
if (instance_exists(obj_mario)) {

    if (obj_mario.x &gt; x)
        hspeed = 0.5;
    else if (obj_mario.x &lt; x)
        hspeed = -0.5;
}
else {

    if (obj_levelmanager.x &gt; x)
        hspeed = 0.5;
    else if (obj_levelmanager.x &lt; x)
        hspeed = -0.5;
}

//Animate
image_speed = 0.15;

//Set the sprite
sprite_index = spr_spike;

//Spit another ball
alarm[0] = 60 + random(round(60));

//Repeat the process
alarm[11] = 60 + random(round(60));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spit a spike ball

//If Mario does not exist.
if (!instance_exists(obj_mario)) {

    alarm[0] = 1;
    exit;
}

//Otherwise, if it exists and Mario is nearby.
else if ((obj_mario.x &gt; x-32) &amp;&amp; (obj_mario.x &lt; x+32)) {

    alarm[0] = 1;
    exit;
}

//Otherwise, spit out a ball.
else {

    //If the spike is on contact with the ground.
    if (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_solidtop,0,0))
    || (collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom+1,obj_slopeparent,1,0)) {
    
        //Set up the sprite.
        sprite_index = spr_spike_throw;
        
        //Animate it
        image_speed = 0.1;
        image_index = 0;
        
        //Set the horizontal speed
        hspeed = 0;
        
        //Throw the ball
        alarm[1] = 64;
        
        //Create said ball
        myball = instance_create(x,y,obj_spike_ball);
        with (myball) {
        
            parent = other.id;
        }
    }
    
    //Otherwise, deny event
    else {
    
        alarm[0] = 1;
        exit;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the holding pose.

if (sprite_index == spr_spike_throw)
    image_single = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
