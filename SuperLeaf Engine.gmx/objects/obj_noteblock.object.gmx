<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_noteblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Standard Note Block

/*
**  This item uses creation code!
**
**  sprout = Pick from below:
**      cs_fire
**      cs_raccoon
**      cs_1up
**      cs_star
*/

//Default Value
sprout = 0;

//Animate
image_speed = 0.15;

//Call the inherited event.
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprout out an item.
    
//Fire Flower
if (sprout == cs_fire) {

    //Play sprout sound.
    audio_play_sound(snd_sprout,0,0);

    //If Mario is small.
    if (global.powerup == cs_small) {
    
        //Make a mushroom sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_mushroom;
        }
    }
    
    //Otherwise, if it's not small.
    else {
    
        //Make a mushroom sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_fireflower;
        }
    }
}

//Super Leaf
else if (sprout = cs_raccoon) {

    //Play sprout sound.
    audio_play_sound(snd_sprout,0,0);

    //If Mario is small.
    if (global.powerup == cs_small) {
    
        //Make a mushroom sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_mushroom;
        }
    }
}

//1-UP
else if (sprout == cs_1up) {

    //Play sprout sound.
    audio_play_sound(snd_sprout,0,0);

    //Make a 1up sprout out from the block.
    with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
    
        sprite_index = spr_1up;
    }        
}

//Starman
else if (sprout == cs_star) {

    //Play sprout sound.
    audio_play_sound(snd_sprout,0,0);

    //Make a starman sprout out from the block.
    with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
    
        sprite_index = spr_starman;
    }        
}

//Prevent creation of new powerups.
sprout = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish block bump

//Stop vertical speed.
vspeed = 0;
y = ystart;
ready = 0;

//Sprout out an item.
if (sprout == cs_raccoon) {

    if (global.powerup != cs_small) {
    
        //Sprout out a leaf.
        instance_create(xstart+8,ystart-1,obj_leaf);
        
        //Prevent creation of new items
        sprout = 0;
    }
    else {
    
        alarm[2] = 16;
    }
}
else {

    alarm[2] = 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reverse direction

//If the block was hit from above.
if (vspeed &gt; 0) {

    //Make Mario do something.
    with (obj_mario) {
    
        //Enables gravity.
        disablegrav = 0;
        
        //Makes Mario able to vary the height of his jump.
        jumping = 1;
        
        //Check if the shift key is pressed for more jump strength.
        if (keyboard_check(vk_shift)) {
        
            //Set the vertical speed.
            vspeed = -4.125;
            
            //Play a spring sound.
            audio_play_sound(snd_note,0,false);
        }
        
        //Otherwise, if the shift key is not pressed.
        else {
        
            //Set the vertical speed.
            vspeed = -2.925;
            
            //Play a spring sound.
            audio_play_sound(snd_bump,0,false);
        }
    }
}

//Reverse vertical speed
vspeed = -vspeed;

//Finish block bump
alarm[1] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario bounce.

//If Mario does exist.
if (instance_exists(obj_mario)) {

    if (collision_rectangle(bbox_left,bbox_top-1,bbox_right,bbox_top-1,obj_mario,0,1))
    &amp;&amp; (!collision_rectangle(obj_mario.bbox_left,obj_mario.bbox_bottom,obj_mario.bbox_right,obj_mario.bbox_bottom+1,obj_platformparent,0,1))
    &amp;&amp; (obj_mario.vspeed == 0)
    &amp;&amp; (!ready) {
    
        //Prevent Mario from jumping
        with (obj_mario) jumping = 2;
        
        //Set the vertical speed.
        vspeed = 3;        
        
        //Mark as hit.
        ready = 1;
                
        //Change direction
        alarm[0] = 4;
        
        //Make a item sprout out.
        if (sprout != 0)
            event_user(1);
    }
}

//Snap solid into position.
mysolid.y = round(y);

//If Mario overlaps the block, keep him above it.
if (ready) {

    if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_mario,0,0))
    &amp;&amp; (obj_mario.state &lt; 2)
    &amp;&amp; (obj_mario.vspeed &gt;= 0)
    &amp;&amp; (obj_mario.y &lt; bbox_top-11) {
    
        //Snap Mario above the block.
        obj_mario.y = ceil(bbox_top-16);
        
        //Prevent him from jumping.
        obj_mario.jumping = 2;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a powerup

//Fire flower.
if (sprout == cs_fire) {

    //If Mario is small.
    if (global.powerup == cs_small) {
    
        //Create a mushroom.
        with (instance_create(xstart+8,ystart+16,obj_powerup_note)) {
        
            sprite_index = spr_mushroom;
        }
    }
    
    //Otherwise, if Mario is not small.
    else {
    
        //Create a fireflower.
        with (instance_create(xstart+8,ystart+16,obj_powerup_note)) {
        
            sprite_index = spr_fireflower;
        }
    }
}

//Leaf
else if (sprout == cs_raccoon) {

    //If Mario is small.
    if (global.powerup == cs_small) {
    
        //Create a mushroom.
        with (instance_create(xstart+8,ystart+16,obj_powerup_note)) {
        
            sprite_index = spr_mushroom;
        }
    }
    
    //Otherwise, if Mario is not small.
    else {
    
        //Create a leaf.
        with (instance_create(xstart+8,ystart+16,obj_leaf)) alarm[1] = 1;
    }
}

//1-UP
else if (sprout == cs_1up) {

    //Create a 1-UP
    with (instance_create(xstart+8,ystart,obj_powerup_note)) {
    
        sprite_index = spr_1up;
    }
}

//Star
else if (sprout == cs_star) {

    //Create a star
    with (instance_create(xstart+8,ystart,obj_powerup_note)) {
    
        sprite_index = spr_starman;
    }
}  

//Prevent creation of new items.
sprout = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
