<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mask_platform_fake</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The parent object for all moving platforms.

//Create a temporary platform.
ID = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy fake platform if exists

if (ID != -1) {

    with (ID) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Default platform collision event

//If Mario overlaps the platform.
if (collision_rectangle(bbox_left,bbox_top-5,bbox_right,bbox_top+4,obj_mario,0,0))
&amp;&amp; (obj_mario.state &lt; 2)
&amp;&amp; (obj_mario.vspeed &gt;= 0)
&amp;&amp; (obj_mario.y &lt; bbox_top-11) {

    //Snap Mario above the platform.
    obj_mario.y = ceil(bbox_top-16);   
    
    //If the platform is moving to the right.
    if (x-xprevious &gt; 0) {
    
        if (!collision_rectangle(obj_mario.bbox_right,obj_mario.bbox_top+4,obj_mario.bbox_right+1,obj_mario.bbox_bottom-1,obj_solid,0,1))
            obj_mario.x += x-xprevious;
    }
    
    //Otherwise if the platform is moving to the left.
    else if (x-xprevious &lt; 0) {
    
        if (!collision_rectangle(obj_mario.bbox_left-1,obj_mario.bbox_top+4,obj_mario.bbox_left,obj_mario.bbox_bottom-1,obj_solid,0,1))
            obj_mario.x += x-xprevious;        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wraps around if enabled on the level.

if (global.hwrap) { //If room wrapping is enabled on the room.
    
    //If Mario is nearby the right boundary of the room.
    if (x &gt; room_width) {
    
        //Make Mario go to the left boundary of the room.
        x -= room_width;
    }    
    
    //Otherwise, if Mario is nearby the left boundary of the room.
    else if (x &lt; 0) {
    
        //Make Mario go to the right boundary of the room.
        x += room_width;
    }
    
    //Make the fake platform appear when nearby the room boundaries.
    if (ID != -1) {
        
        //Set the x position depending on which border the platform is.
        if (x &gt; room_width-(abs(sprite_width/2))) {
        
            if (instance_exists(ID)) {
            
                ID.x = x-room_width;
                ID.y = y;
            }
            else {
            
                instance_activate_object(ID);
            }
        }
        else if (x &lt; (abs(sprite_width/2))) {
        
            if (instance_exists(ID)) {
            
                ID.x = x+room_width;
                ID.y = y;
            }
            else {
            
                instance_activate_object(ID);
            }
        }
        else {
        
            instance_deactivate_object(ID);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the platform

draw_sprite(sprite_index,-1,round(x),round(y));
if (global.hwrap) {

    if (x &gt; room_width-(abs(sprite_width/2))) {
    
        draw_sprite(sprite_index,-1,round(x)-room_width,round(y));
    }
    else if (x &lt; (abs(sprite_width/2))) {
    
        draw_sprite(sprite_index,-1,round(x)+room_width,round(y));
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
