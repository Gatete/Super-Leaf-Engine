<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_qblock</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_blockparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Standard Question Block

/*
**  This item uses creation code!
**
**  sprout = Pick from below:
**      cs_coin (Default)
**      cs_coin_star
**      cs_fire
**      cs_raccoon
**      cs_1up
**      cs_star
**      cs_pswitch
**      cs_trampoline
**      cs_kuriboshoe
**      cs_beanstalk
*/

//Default Value
sprout = cs_coin;

//Gets a star.
getstar = 0;

//Animate
image_speed = 0.15;

//Call the inherited event.
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sprout out an item.

switch (sprout) {

    //Coin / Star
    case (cs_coin_star): {
    
        //If Mario is invincible.
        if (instance_exists(obj_invincibility)) {
        
            //Play sprout sound.
            audio_play_sound(snd_sprout,0,0);
        
            //Make a starman sprout out from the block.
            with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
            
                sprite_index = spr_starman;
            }                    
        }
        
        //Otherwise, if it's not.
        else if (getstar) {
        
            //Play sprout sound.
            audio_play_sound(snd_sprout,0,0);
        
            //Make a starman sprout out from the block.
            with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
            
                sprite_index = spr_starman;
            }               
        }
    } break;
    
    //Fire Flower
    case (cs_fire): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
    
        //If Mario is small.
        if (global.powerup == cs_small) {
        
            //Make a mushroom sprout out from the block.
            with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
            
                sprite_index = spr_mushroom;
            }
        }
        
        //Otherwise, if it's not small.
        else {
        
            //Make a mushroom sprout out from the block.
            with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
            
                sprite_index = spr_fireflower;
            }
        }
    } break;
    
    //Super Leaf
    case (cs_raccoon): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
    
        //If Mario is small.
        if (global.powerup == cs_small) {
        
            //Make a mushroom sprout out from the block.
            with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
            
                sprite_index = spr_mushroom;
            }
        }
    } break;
    
    //1-UP
    case (cs_1up): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
    
        //Make a 1up sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_1up;
        }        
    } break;
    
    //Starman
    case (cs_star): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
    
        //Make a starman sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_starman;
        }        
    } break;
    
    //Trampoline
    case (cs_trampoline): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
        
        //Make a trampoline sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_trampoline;
        }
    } break;
    
    //Kuriboshoe
    case (cs_kuriboshoe): {
    
        //Play sprout sound.
        audio_play_sound(snd_sprout,0,0);
        
        //Make a trampoline sprout out from the block.
        with (instance_create(xstart+8,ystart-1,obj_powerup_sprout)) {
        
            sprite_index = spr_kuriboshoe;
        }
    } break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Finish block bump

//Stop vertical speed.
vspeed = 0;
y = ystart;

//Sprout out an item.
if (sprout == cs_raccoon) {

    if (global.powerup != cs_small) {
    
        //Sprout out a leaf.
        instance_create(xstart+8,ystart-1,obj_leaf);
    }
    else {
    
        alarm[2] = 16;
    }
}
else {

    alarm[2] = 16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a item

//Coin
if (sprout == cs_coin) {

    instance_create(x,ystart-16,obj_blockcoin);
}

//Coin / Star if invincible.
else if (sprout == cs_coin_star) {

    //If Mario is not invincible.
    if (!instance_exists(obj_invincibility)) {
    
        //Create a coin.
        instance_create(x,ystart-16,obj_blockcoin);
    }
    
    //Otherwise, if it's not invincible.
    else {

        //Gets a star if the invincibility ended.
        getstar = true;
    }
}

//P-Switch
else if (sprout == cs_pswitch) {

    //Create a P-Switch
    instance_create(x,ystart-16,obj_pswitch);
    
    //Create a effect
    instance_create(x,ystart-16,obj_smoke);
}

//Beanstalk
else if (sprout == cs_beanstalk) {

    //Create a beanstalk.
    instance_create(xstart,ystart,obj_beanstalk);
}

//Set the sprite of the block
sprite_index = spr_qblock_empty;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
