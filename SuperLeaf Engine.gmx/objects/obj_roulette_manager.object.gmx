<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_event</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handles roulette and the prizes.

//Play stream
stream = -1;

//Top
rou1 = 3;

//Middle
rou2 = 3;

//Bottom
rou3 = 3;

//Check if all three roulettes are stopped
rouend = 0;

//Plays a drum roll if you have two frames of the same kind.
drumroll = false;

//Loop the P-Meter sound
audio_play_sound(snd_pmeter,0,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear the level and stop the music.

//Stop music
FMODInstanceStop(global._stream_minigame);
global._stream_minigame = -1;

//Clear it
global.clear = 1;

//Return to map
if (instance_number(obj_fade_in) == 0) {

    //Create a fade in effect.
    ID = instance_create(0,0,obj_fade_in);
    with (ID) {
    
        target = rm_map;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Give out prizes

//If all frames are stopped.
if (rouend == 1) {

    //Give 2-UP
    if ((rou1 == 0) &amp;&amp; (rou2 == 0) &amp;&amp; (rou3 == 0)) {
            
        //Stop music
        FMODInstanceStop(global._stream_minigame);
        global._stream_minigame = -1;
        
        //Play bonus win
        stream = FMODSoundPlay(global._track_bonuswin, 0);
        
        //Give 2 extra lives
        ID = instance_create(view_xview[0]+128,view_yview[0]+224,obj_score_minigame);
        with (ID) {
        
            image_index = 1;
        }
        
        //End the bonus
        rouend = 2;
    }
    
    //Give 3-UP
    else if ((rou1 == 1) &amp;&amp; (rou2 == 1) &amp;&amp; (rou3 == 1)) {
            
        //Stop music
        FMODInstanceStop(global._stream_minigame);
        global._stream_minigame = -1;
        
        //Play bonus win
        stream = FMODSoundPlay(global._track_bonuswin, 0);
        
        //Give 3 extra lives
        ID = instance_create(view_xview[0]+128,view_yview[0]+224,obj_score_minigame);
        with (ID) {
        
            image_index = 2;
        }
        
        //End the bonus
        rouend = 2;
    }
    
    //Give 5-UP
    else if ((rou1 == 2) &amp;&amp; (rou2 == 2) &amp;&amp; (rou3 == 2)) {
            
        //Stop music
        FMODInstanceStop(global._stream_minigame);
        global._stream_minigame = -1;
        
        //Play bonus win
        stream = FMODSoundPlay(global._track_bonuswin, 0);
        
        //Give 5 extra lives
        ID = instance_create(view_xview[0]+128,view_yview[0]+224,obj_score_minigame);
        with (ID) {
        
            image_index = 3;
        }
        
        //End the bonus
        rouend = 2;
    }
    
    //Otherwise, do not give a thing.
    else {
    
        //Play sound
        audio_play_sound(snd_wrong,0,0);        
        
        //End the bonus
        rouend = 3;
    }
    
    //Exit
    alarm[0] = 240;
}

//Stop P-Meter sound
if (rouend &gt; 0)
    audio_stop_sound(snd_pmeter);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start room.

//Call the HUD object.
instance_create(0,0,obj_hud);

//Open up a curtain.
instance_create(0,0,obj_fade_out);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw background

draw_background_ext(bgr_minigame_slot_a,0,0,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
