<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goalorb</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>obj_physicsparent</parentName>
  <maskName>spr_square</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A magical ball

//Play stream
stream = -1;

//Display 'Course Clear'
ready = 0;

//Check if time has been collected
ready2 = 0;

//Call inherited event
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Return to map

//Create fade effect
if (instance_number(obj_fade_in) == 0) {

    //Create a fade in effect.
    ID = instance_create(0,0,obj_fade_in);
    with (ID) {
    
        target = rm_map;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get points off time

//If the time is greater than 4.
if (global.time &gt; 4) {

    //Subtract 5 seconds from time.
    global.time -= 5;
    
    //Get 250 points.
    score += 500;
    
    //Repeat the process.
    alarm[1] = 1;    
}

//Otherwise, if time is lower than 5 and time is greater than 0.
else if ((global.time &gt; 0) &amp;&amp; (global.time &lt; 5)) {

    //Subtract 1 second from time.
    global.time--;
    
    //Get 50 points
    score += 100;
    
    //Repeat the process.
    alarm[1] = 1;
}

//Play a sound
if (global.time &gt; 0) {

    audio_stop_sound(snd_count);
    audio_play_sound(snd_count,0,0);
}
else if (global.time == 0)
    audio_play_sound(snd_count_end,0,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Display 'Course Clear'

ready = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///? Ball logic

//Call inherited event
event_inherited();

//If the ball is visible.
if (image_alpha = 1) {

    //If Mario touches it.
    if (place_meeting(x,y,obj_mario)) {
    
        //Dissappear
        image_alpha = 0;
        instance_create(x,y,obj_smoke);
        
        //Stop streams
        FMODInstanceStop(global._stream_pswitch);
        global._stream_pswitch = -1;
        FMODInstanceStop(global._stream_starman);
        global._stream_starman = -1;
        
        //Disable Mario's controls
        with (obj_mario) disablecontrol = true;
        
        //Stop music, timer and pswitch effects.
        with (obj_levelmanager) {
        
            //Disable music playing
            musicdisable = 1;
        
            //Stop music
            alarm[1] = 1;
            
            //Stop timer
            alarm[2] = 0;
            
            //Stop P-Switch effect
            if (switchon)
                alarm[8] = 1;
        }
        
        //Play stream
        stream = FMODSoundPlay(global._track_fireworks, 0);
        
        //Clear the level
        global.clear = 1;
        
        //Display 'Course clear'
        alarm[0] = 175;        
        
        //Start timer countdown
        alarm[1] = 350;
    }
}
else if (image_alpha == 0) {

    //Is the stream playing?
    if (!FMODInstanceIsPlaying(stream)) {
    
        //Is there not time left?
        if ((global.time == 0) &amp;&amp; (!ready2)) {
        
            //Time has been collected
            ready2 = 1;
            
            //Return to map
            alarm[2] = 120;
        }
    }    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_slopeparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slope Collision

//If the object vertical speed is equal/greater than 0.
if (vspeed &gt;= 0) { 
    
    //Stop vertical speed.
    gravity = 0;
    vspeed = -vspeed/2; 
}

//Stay embed on the slope.
if (!collision_rectangle(bbox_left,bbox_bottom,bbox_right,bbox_bottom,obj_solidtop,0,0)) {

    //Move 1 pixel upwards
    while (collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom-1,obj_slopeparent,1,0))
        y--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision

//If there's a platform nearby and Mario's vertical speed is greater than 0.
if ((bbox_bottom &lt; other.yprevious+5) &amp;&amp; (vspeed &gt; 0)) {

    //Snap to position.
    y = other.yprevious-16;
    
    //Stop vertical speed.
    gravity = 0;
    vspeed = -vspeed/2;    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the ball and 'Course Clear' text.

//Display course clear
if (ready = 1) {

    //Draw "Course Clear" text
    draw_sprite(spr_courseclear,1,view_xview[0]+47,view_yview[0]+35);
}

//Draw ball
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,1,1,0,c_white,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
