<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario has cleared the level.

//Do not animate
image_speed = 0;

//Set gravity
gravity = 0.25;

//Move
ready = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goal mario logic

//Set up Mario's sprite
event_user(0);

//Cap Vertical speed
if (vspeed &gt; 4) {

    vspeed = 4;
    gravity = 0;
}

//If Mario has landed, move to the right.
if (ready)
    hspeed = 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solidtop">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Floor collision

//If there's a platform nearby and Mario's vertical speed is greater than 0.
if ((bbox_bottom &lt; other.yprevious+5) &amp;&amp; (vspeed &gt; 0)) {

    //Snap to position.
    y = other.yprevious-16;
    
    //Stop vertical speed.
    vspeed = 0;
    gravity = 0;
    
    //Start moving
    ready = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up Mario's sprite

//If Mario is small.
if (global.powerup == cs_small) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_small_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 0;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_small_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario is big.
else if (global.powerup == cs_big) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_big_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 1;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_big_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_fire) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_fire_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 1;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_fire_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario has the raccoon powerup.
else if (global.powerup == cs_raccoon) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_raccoon_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 1;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_raccoon_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario has the frog powerup.
else if (global.powerup == cs_frog) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_frog_walk;
        
        //Set the frame
        image_speed = 0;
        image_index = 2;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_frog_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario has the tanooki powerup.
else if (global.powerup == cs_tanooki) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_tanooki_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 1;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_tanooki_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}

//Otherwise, if Mario has the hammer powerup.
else if (global.powerup == cs_hammer) {

    //Check if Mario has not landed.
    if (!ready) {
    
        //Set the sprite
        sprite_index = spr_mario_hammer_jump;
        
        //Set the frame
        image_speed = 0;
        image_index = 1;
    }
    
    //Otherwise, if Mario has landed.
    else if (ready) {
    
        //Set the sprite
        sprite_index = spr_mario_hammer_walk;
        
        //Set the speed
        image_speed = 0.3;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,1,1,0,c_white,1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
