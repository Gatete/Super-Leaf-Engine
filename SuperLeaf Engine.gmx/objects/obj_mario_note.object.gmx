<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_jump</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario is jumping to the sky.

//Make Mario flash
isflashing = 0;
alarm[0] = 1;

//Start jumping.
alarm[1] = 1;

//Is Mario holding?
holding = 0;
myitem = -1;
myframe = 0;

//Set the palette sprite.
pal_sprite = spr_palette;
current_pal = 0;

//Fixes a bug involving kuribo's shoe
kuribofix = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump

vspeed = -8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Mario's flashing effect.

//Make Mario flash if he's under the effects of the starman.
if (instance_exists(obj_invincibility)) {

    //Make Mario flash.
    isflashing = (isflashing mod 4)+1;
    
    //Repeat the process.
    if (obj_invincibility.alarm[0] &gt; 120)
        alarm[0] = 4;
    else
        alarm[0] = 8;
}
else {

    isflashing = 0;
    alarm[0] = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set up Mario's sprite.

//Small Mario
if (global.powerup == cs_small) {
    
    //Do not animate.
    image_speed = 0;
    image_index = 1;
    
    //Set the sprite
    if (holding == 0)
        sprite_index = spr_mario_small_jump;
    else
        sprite_index = spr_mario_small_hold;
}

//Big Mario
else if (global.powerup == cs_big) {

    //Do not animate.
    image_speed = 0;
    image_index = 2;
    
    //Set the sprite
    if (holding == 0)
        sprite_index = spr_mario_big_jump;
    else
        sprite_index = spr_mario_big_hold;
}

//Fire Mario
else if (global.powerup == cs_fire) {

    //Do not animate.
    image_speed = 0;
    image_index = 2;
    
    //Set the sprite
    if (holding == 0)
        sprite_index = spr_mario_fire_jump;
    else
        sprite_index = spr_mario_fire_hold;
}

//Raccoon Mario
else if (global.powerup == cs_raccoon) {

    //Do not animate.
    image_speed = 0;
    
    //Set the sprite
    if (holding == 0) {
    
        sprite_index = spr_mario_raccoon_jump;
        image_index = 0;
    }
    else {
    
        sprite_index = spr_mario_raccoon_hold;
        image_index = 2;
    }
}

//Frog Mario
else if (global.powerup == cs_frog) {

    //Do not animate.
    image_speed = 0;
    image_index = 2;
    
    //Set the sprite
    if (holding == 0)
        sprite_index = spr_mario_frog_walk;
    else
        sprite_index = spr_mario_frog_hold;
}

//Tanooki Mario
else if (global.powerup == cs_tanooki) {

    //Do not animate.
    image_speed = 0;
    
    //Set the sprite
    if (holding == 0) {
    
        sprite_index = spr_mario_tanooki_jump;
        image_index = 0;
    }
    else {
    
        sprite_index = spr_mario_tanooki_hold;
        image_index = 2;
    }
}

//Hammer Mario
else if (global.powerup == cs_hammer) {

    //Do not animate.
    image_speed = 0;
    image_index = 2;
    
    //Set the sprite
    if (holding == 0)
        sprite_index = spr_mario_hammer_jump;
    else
        sprite_index = spr_mario_hammer_hold;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update the palette sprite.

current_pal = wrap(isflashing,0,pal_swap_get_pal_count(pal_sprite)-1);

//If Mario has the small, big or raccoon powerups.
if ((global.powerup == cs_small) || (global.powerup == cs_big) || (global.powerup == cs_raccoon)) {

    pal_sprite = spr_palette;
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_fire) {

    pal_sprite = spr_palette_fire;
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_frog) {

    pal_sprite = spr_palette_frog;
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_tanooki) {

    pal_sprite = spr_palette_tanooki;
}

//Otherwise, if Mario has the fire powerup.
else if (global.powerup == cs_hammer) {

    pal_sprite = spr_palette_hammer;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_warproom">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Warp to another room.

//With the warp object.
with (other) {

    //If the position needs to be changed in the new room.
    if (postchange != -1) {
    
        //Remember the spawn type
        global.postchange = postchange;
        
        //Remember the x spawn position.
        global.postx = postx+16;
        
        //Remember the y spawn position.
        global.posty = posty;
    }
    
    //Go to the assigned room
    if (instance_number(obj_fade_in) == 0) {
    
        //Create a fade in effect.
        ID = instance_create(0,0,obj_fade_in);
        with (ID) {
        
            target = other.myroom;
        }
    }
}

//Stop Mario
speed = 0;

//Snap to position
move_snap(16,16);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Mario

//Draw the item if it exists
if (holding &gt; 0) {

    //Draw the item
    draw_sprite_ext(myitem,myframe,round(x)+10*image_xscale,round(y)-1,1,1,0,c_white,1);
}

//Set the palette.
if (isflashing &gt; 0) {

    pal_swap_set(pal_sprite,current_pal);    
}

//Draw Mario Shaded
draw_sprite_ext(sprite_index,-1,round(x),round(y)+1,image_xscale,1,0,c_white,image_alpha);

//Reset Shader
shader_reset();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
