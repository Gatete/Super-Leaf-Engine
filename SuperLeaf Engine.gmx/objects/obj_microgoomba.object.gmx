<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_goomba_micro</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///A microgoomba, stay away if you don't want to lose your jump ability.

//Animate.
image_speed = 0.05;

//Hang on Mario
ready = 0;
flee = 0;
xfix = 0;
yfix = 0;

//Set the path
path_start(pth_microgoomba,1,path_action_continue,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make Mario able to shake them out.

flee = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Microgoomba logic.

if (ready == 0) {

    //Deny if Mario is behind the scenery.
    if (instance_exists(obj_mario)) {
    
        if (obj_mario.depth == 16) {
        
            if (obj_mario.tile12 &gt; -1) || (obj_mario.tile15 &gt; -1)
                exit;
        }
    }

    //Check for Mario.
    mario = collision_rectangle(bbox_left,bbox_top,bbox_right,bbox_bottom,obj_mario,0,1);
    if (mario) {
    
        //Move towards mario.
        ready = 1;
        
        //Stop the path movement
        path_end();
        
        //Stay for 3 seconds
        alarm[0] = 180;
        
        //Snap into position.
        if (global.powerup == cs_small)
            yfix = random_range(0,8);
        else
            yfix = random_range(-8,8);
    }
}
else {
    
    //Set up the position.
    if (instance_exists(obj_mario)) {
    
        //Snap to position.  
        x = obj_mario.x+xfix;
        y = obj_mario.y+yfix;
    
        //If Mario is not swimming.
        if (!obj_mario.swimming) {
        
            //Set up the position of the microgoomba.
            if (ready = 1) {
            
                xfix += 0.5;
                if (xfix &gt; 9) {
                
                    ready = 2;
                    depth = -4;
                }
            }
            else if (ready = 2) {
            
                xfix -= 0.5;
                if (xfix &lt; -9) {
                
                    ready = 1;
                    depth = -6;
                }
            }
            
            //If Mario jumps and the 'random' variable hits 1.
            if (obj_mario.jumping = 1) {
            
                if (flee) {
                
                    event_user(0);
                    exit;
                }
                
                //Prevent mario from jumping.
                obj_mario.jumping = 2;
                
                //Set the vertical speed.
                obj_mario.vspeed = -1.5;                
            }
        }
        
        //Otherwise, if Mario is swimming.
        else
            alarm[0] = 1;
    }
    else
        alarm[0] = 1;
}

if (y &gt; view_yview[0]+256)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wraps around if enabled on the level.

if (global.hwrap) { //If room wrapping is enabled on the room.
    
    //If Mario is nearby the right boundary of the room.
    if (x &gt; room_width) {
    
        //Make Mario go to the left boundary of the room.
        x -= room_width;
    }    
    
    //Otherwise, if Mario is nearby the left boundary of the room.
    else if (x &lt; 0) {
    
        //Make Mario go to the right boundary of the room.
        x += room_width;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_invincibility">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Deny if Mario is behind the scenery.
if (instance_exists(obj_mario)) {

    if (obj_mario.depth == 16) {
    
        if (obj_mario.tile12 &gt; -1) || (obj_mario.tile15 &gt; -1)
            exit;
    }
}

//Kill instantly
event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Flee away

//Create dead object.
dead = instance_create(x,y+8,obj_enemy_dead);

//Set the sprite
dead.sprite_index = sprite_index;

//Set the facing direction
dead.image_xscale = 1*sign(yfix);

//Set the horizontal speed
dead.hspeed = random_range(1,-1);

//Set the vertical speed
dead.vspeed = -2.25;
dead.gravity = 0.1;

//Destroy
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
